sd(function)
sd(1.4,3.6,7.9,8.8)
skip()
evaluate(function(x){x+1},6)
evaluate(x)
evaluate(x(8,4,0))
evaluate(c(8,4,0))
skip()
evaluate(function(x){x[3], c(8,4,0) )
evaluate(function(x){x[3]}, c(8,4,0) )
skip()
?paste
paste("programming", "is", "fun!")
paste("Programming", "is", "fun!")
simon_says <- function(...) {
paste("Simon says:",...)
}
telegram <- function(...){}
}
simon_says <- function(...) {
+ paste("Simon says:",...)
+ }
> telegram <- function(...){
> }
skip()
telegram <- function(...) {
paste("START", ..., "STOP")
}
mad_libs <- function(...) {
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
submit()
skip()
mad_libs <- function(...){
# Do your argument unpacking here!
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
%mult_add_one%" <- function(left, right){
%p%" <- function(){
}
skip()
"%p%" <- function(left, right){
paste(left, right)
}
paste('I', 'love', 'R!')
"%p%" <- function(left, right){
+     paste(left, right)
+ }
paste('I', 'love', 'R!')
paste(I%p%Love%p%,R)
skip()
q()
swirl()
install.packages(swirl)
install.package("swirl")
install.packages("swirl")
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
boring_function <- function(x) {
x
}
submit()
View(boring_function)
boring_function
View(boring_function)
boring_function
boring_function <- function (x) {
x
}
boring_function
submit()
boring_function <- function(x) {
x
}
submit()
source('/var/folders/97/4ypf52hd11s784g8s0bmmqk40000gn/T//RtmpHplHre/boring_function.R')
submit()
boring_function('My first function!')
boring_function
my_mean <- function(x) {
sum(x)
}
my_mean <- function(my_vector) {
sum(my_vector)/length(my_vector)
}
my_mean(2,3)
my_mean()
my_mean(2)
my_mean(2,4)
my_mean <- function(my_vector) {
+ sum(my_vector)/length(my_vector)
+ }
my_mean <- function(my_vector) {sum(my_vector)/length(my_vector)
+ }
my_mean <- function(my_vector) {
sum(my_vector)/length(my_vector)
}
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4,div=2)
args(remainder)
submit()
submit
submit()
submit
submit()
submit()
submit()
evaluate<- sd(c(1.4,3.6,7.9,8.8))
vector <- c(1.4,3.6,7.9, 8.8)
sd(c(1.4,3.6,7.9,8.8))
info()
evaluate <- sd(c)
evaluate <- function(func, dat)
sd(c(1.4,3.6,7.9,8.8))
skip()
evaluate(function(x){x+1}, 6)
evaluate(function(x), c(8,4,0))
evaluate(function(c(8,4,0)))
skip()
evaluate(function(x){x[3]}, c(8,4,0))
skip()
?paste
paste("Programming", "is", "fun!")
submit()
telegram <- function("hello)
}
}
telegram <- function(...){
paste("START", ..., "STOP")
}
telegram <- function(...){
paste("START",...,"STOP")
}
telegram("hello")
submit()
paste(mad_libs)
mad_lib
mad_libs()
skip()
mad_libs<- function(...){
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
skip()
skip()
d1 <- Sys.Date()
class()
class(d1)
unclass(d1)
print(d1)
d1
d2 <- as.Date("1960-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units='days')
cube <- function(x,n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x+g(x)
}
z<-10
f(3)
x <- 5
y <- if (x<3){
NA
} else {
10
}
y
setwd(Desktop)
setwd(Isabel Powell)
getwd
getwd()
file(specdata)
setwd("specdata")
setwd("specdata")
pollutantmean <- function(directory, pollutants, id=1:332) {
directory <- file("specdata")
pollutant <- c(sulfate, nitrate)
}
pollutantmean <- function(directory, pollutant, id= 1:332) {}
pollutantmean <- function(directory, pollutant, id= 1:332) {
for(monitor in id) {
path <- paste(getwd(), "/", directory, "/", sprintf(%03d", monitor), ".csv" sep="")
pollutantmean <- function(directory, pollutant, id= 1:332) {
path <- getwd("specdata")
monitor_data <- read.csv(path)
interested_data <- monitor_data[pollutant]
means <- c(means, interested_data[!is.na(interested_data)])
}
mean(means)
mean(pollutantmean())
pollutantmean()
for(monitor in id) {
pollutantmean <- function(directory, pollutant, id= 1:332) {
+ path <- getwd("specdata")
+ monitor_data <- read.csv(path)
+ interested_data <- monitor_data[pollutant]
+ means <- c(means, interested_data[!is.na(interested_data)])
+ }
means <- c()
mean(means)
means <- c()
pollutantmean <- function(directory, pollutant, id= 1:332) {
+     + path <- getwd("specdata")
+     + monitor_data <- read.csv(path)
+     + interested_data <- monitor_data[pollutant]means <- c(means, interested_data[!is.na(interested_data)])
}
pollutantmean <- function(directory, pollutant, id= 1:332) {
+     + path <- getwd("specdata")
+     + monitor_data <- read.csv(path)
+     + interested_data <- monitor_data[pollutant]
+     + means <- c(means, interested_data[!is.na(interested_data)])
+     + }
pollutantmean <- function(directory, pollutant, id=1:332) {
directory <- getwd("specdata")
file_list <- list.files(directory)
for(i in id) {
file_data <- read.csv(file_list)
data <- rbind(file_data)
}
mean(data[[pollutant]], na.rm=TRUE)
}
test1 <- pollutantmean("specdata","sulfate", id=1:10)
pollutantmean <- function(directory, pollutant, id=1:332) {
+ directory <- paste(getwd(), "/", directory, "/", sep="")
+ file_list <- list.files(directory)
+ for(i in id) {
+ file_data <- read.csv(file_list)
+ data <- rbind(file_data)
+ }
+ mean(data[[pollutant]], na.rm=TRUE)
+ }
pollutantmean <- function(directory, pollutant, id=1:332) {
means <- c()
for(monitor in id) {
path <- paste(getwd(), "/", directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[pollutant]
means <- c(means, interested_data[!is.na(interested_data)])
}
mean(means)
}
test1 <- pollutantmean("specdata", "sulfate", id=1:10)
test1 <- pollutantmean("specdata", "sulfate", id=1:10)
setwd("specdata")
getwd()
setwd("Coursera")
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory <- paste(getwd(),"/",directory,"/",sep="")
file_list <- list.files(directory)
data <- NA
for (i in id) {
file_dir <- paste(directory,file_list[i],sep="")
file_data <- read.csv(file_dir)
data <- rbind(data,file_data)
}
mean(data[[pollutant]],na.rm = TRUE)
}
test1 <- pollutantmean("specdata", "sulfate", id=1:10)
test1 <- pollutantmean("specdata", "sulfate", id=1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
+
+     directory <- paste(getwd(),"/",directory,"/",sep="/")
+
+
+     file_list <- list.files(directory)
+     data <- NA
+
+     for (i in id) {
+
+         file_dir <- paste(directory,file_list[i],sep="")
+         file_data <- read.csv(file_dir)
+
+
+         data <- rbind(data,file_data)
+     }
+
+     mean(data[[pollutant]],na.rm = TRUE)
+ }
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory <- paste(getwd(),"/",directory,"/",sep="/")
path <- paste(getwd(), "/", directory, "/", ".csv", sep = "/")
mon
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of  the pollutant for which we will calcultate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result
means <- c()
for(monitor in id){
path <- paste(getwd(), "/", directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[pollutant]
means <- c(means, interested_data[!is.na(interested_data)])
}
mean(means)
}
test1 <- pollutantmean("specdata", "sulfate", 1:10)
View(pollutantmean)
edit(pollutantmean)
test1 <- pollutantmean("specdata", "sulfate", 1:10)
test1 <- pollutantmean("specdata", "sulfate", 1:10)
> setwd("~/Desktop")
> library(datasets)
> data(iris)
> ?iris
> iris
library(datasets)
data("iris")
?iris
iris
install.packages("data.table")
library(data.table)
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica", round(mean(Sepal.Length))]
rowMeans(iris[,1:4])
apply(iris, 1, mean)
apply(iris, [,1:4], 2, mean)
apply(iris, 2, mean)
colMeans(iris)
apply(iris, [,1:4], 1, mean)
apply(iris, [, 1:4], 2, mean)
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica", round(mean(Sepal.Length))]
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcards$cyl, mtcars$mpg, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcards$cyl)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls
quit()
install.packages("swirl")
library(swirl)
swirl()
ls()
play()
rm(list=ls())
quit()
rm(list=ls())
install.packages("swirl")
library(swirl)
swiirl()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head()
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10, replace=FALSE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(1, size=100, prob=0.7)
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flip2
slips2
flips2
sum(flip2)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5)
rpois(5,10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x-cars$speed, y=cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(cars, main= "My Plot")
plot(cars, title= "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
install.packages("swirl")
library(swirl)
swirl()
data(cars)
?cars
head(car)
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x="Speed", y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab = "Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
?points
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(formula= mpg~cyl, data=mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5,2)
?rpois
set.seed(2)
rpois(5,2)
?rnorm
?qpois
set.seed(10)
x<- rep(0:1, each=5)
e <- rnorm(10,0,20)
y <- 0.5 +2*x +3
plot(y)
?rbinom
library(datasets)
Rprof()
fit <- lm(y~x1 + x2)
Rprof(NULL)
summaryRprof()
by.total()
quit()
